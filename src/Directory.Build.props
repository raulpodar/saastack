<Project>

    <!-- Shared assembly information -->
    <PropertyGroup>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <GenerateAssemblyInfo>true</GenerateAssemblyInfo>
        <IsPackable>false</IsPackable>
        <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
    </PropertyGroup>

    <!-- NuGet package information -->
    <PropertyGroup>
        <Info>$([System.IO.File]::ReadAllText('$(MSBuildProjectDirectory)\..\GlobalAssemblyInfo.cs'))</Info>
        <Pattern>^\s*\[assembly: AssemblyDescription\(\s*"([^"]+)"</Pattern>
        <Description>$([System.Text.RegularExpressions.Regex]::Match($(Info), $(Pattern), System.Text.RegularExpressions.RegexOptions.Multiline).Groups[1].Value)</Description>
        <Pattern>^\s*\[assembly: AssemblyCompany\(\s*"([^"]+)"</Pattern>
        <Authors>$([System.Text.RegularExpressions.Regex]::Match($(Info), $(Pattern), System.Text.RegularExpressions.RegexOptions.Multiline).Groups[1].Value)</Authors>
        <Pattern>^\s*\[assembly: AssemblyCopyright\(\s*"([^"]+)"</Pattern>
        <Copyright>$([System.Text.RegularExpressions.Regex]::Match($(Info), $(Pattern), System.Text.RegularExpressions.RegexOptions.Multiline).Groups[1].Value)</Copyright>
        <Pattern>^\s*\[assembly: AssemblyInformationalVersion\(\s*"([^"]+)"</Pattern>
        <PackageVersion>$([System.Text.RegularExpressions.Regex]::Match($(Info), $(Pattern), System.Text.RegularExpressions.RegexOptions.Multiline).Groups[1].Value)</PackageVersion>
    </PropertyGroup>

    <!-- Additional assembly information -->
    <PropertyGroup>
        <Info>$([System.IO.File]::ReadAllText('$(MSBuildProjectDirectory)\..\GlobalAssemblyInfo.cs'))</Info>
        <Pattern>^\s*\[assembly: AssemblyCompany\(\s*"([^"]+)"</Pattern>
        <Company>$([System.Text.RegularExpressions.Regex]::Match($(Info), $(Pattern), System.Text.RegularExpressions.RegexOptions.Multiline).Groups[1].Value)</Company>
        <Pattern>^\s*\[assembly: AssemblyConfiguration\(\s*"([^"]+)"</Pattern>
        <Configuration>$([System.Text.RegularExpressions.Regex]::Match($(Info), $(Pattern), System.Text.RegularExpressions.RegexOptions.Multiline).Groups[1].Value)</Configuration>
        <Pattern>^\s*\[assembly: AssemblyProduct\(\s*"([^"]+)"</Pattern>
        <Product>$([System.Text.RegularExpressions.Regex]::Match($(Info), $(Pattern), System.Text.RegularExpressions.RegexOptions.Multiline).Groups[1].Value)</Product>
        <Pattern>^\s*\[assembly: AssemblyInformationalVersion\(\s*"([^"]+)"</Pattern>
        <InformationalVersion>$([System.Text.RegularExpressions.Regex]::Match($(Info), $(Pattern), System.Text.RegularExpressions.RegexOptions.Multiline).Groups[1].Value)</InformationalVersion>
        <Pattern>^\s*\[assembly: AssemblyVersion\(\s*"([^"]+)"</Pattern>
        <AssemblyVersion>$([System.Text.RegularExpressions.Regex]::Match($(Info), $(Pattern), System.Text.RegularExpressions.RegexOptions.Multiline).Groups[1].Value)</AssemblyVersion>
        <Pattern>^\s*\[assembly: AssemblyFileVersion\(\s*"([^"]+)"</Pattern>
        <FileVersion>$([System.Text.RegularExpressions.Regex]::Match($(Info), $(Pattern), System.Text.RegularExpressions.RegexOptions.Multiline).Groups[1].Value)</FileVersion>
    </PropertyGroup>

    <PropertyGroup>
        <RepositoryUrl>https://github.com/jezzsantos/saastack</RepositoryUrl>
        <PackageProjectUrl>https://github.com/jezzsantos/saastack</PackageProjectUrl>
        <RepositoryType>GitHub</RepositoryType>
        <PackageReleaseNotes>https://github.com/jezzsantos/saastack/blob/main/README.md</PackageReleaseNotes>
        <RequireLicenseAcceptance>false</RequireLicenseAcceptance>
    </PropertyGroup>

    <!-- Strong naming -->
    <PropertyGroup>
        <SignAssembly>false</SignAssembly>
        <DelaySign>false</DelaySign>
    </PropertyGroup>

    <!-- Analyzers -->
    <PropertyGroup>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <NoWarn>$(NoWarn),1573,1574,1591,1712,1723</NoWarn>
        <RoslynTargetFramework>8.0.19</RoslynTargetFramework> <!-- Update the RuntimeConstants.Dotnet versions also -->
    </PropertyGroup>

    <!-- Runs the analyzers (in memory) on build -->
    <ItemGroup Condition="'$(IsFrameworkProject)'=='true' AND '$(IsTestProject)'!='true' AND '$(IsRoslynComponent)'!='true' AND '$(ExcludeFromFrameworkAnalyzers)'!='true'">
        <ProjectReference Include="$(MSBuildThisFileDirectory)\Tools.Analyzers.Framework\Tools.Analyzers.Framework.csproj" PrivateAssets="all" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
    </ItemGroup>
    <ItemGroup Condition="'$(IsFrameworkProject)'!='true' AND '$(IsTestProject)'!='true' AND '$(IsRoslynComponent)'!='true' AND '$(ExcludeFromNonFrameworkAnalyzers)'!='true'">
        <ProjectReference Include="$(MSBuildThisFileDirectory)\Tools.Analyzers.NonFramework\Tools.Analyzers.NonFramework.csproj" PrivateAssets="all" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
    </ItemGroup>

    <!-- Build configurations -->
    <PropertyGroup>
        <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
        <NoWarn>$(NoWarn),436,NU5125</NoWarn>
        <Configurations>Debug;Release;ReleaseForDeploy</Configurations>
        <Platforms>AnyCPU</Platforms>
        <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>
        <Platform Condition="'$(Platform)' == ''">AnyCPU</Platform>
        <HostingPlatform>HOSTEDONAZURE</HostingPlatform> <!-- Hosting platform (`HOSTEDONAZURE` or `HOSTEDONAWS` or `HOSTEDONGC`) -->
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Debug|AnyCPU'">
        <DebugSymbols>true</DebugSymbols>
        <DebugType>full</DebugType>
        <Optimize>false</Optimize>
        <OutputPath>bin\$(Configuration)\</OutputPath>
        <DefineConstants>$(DefineConstants);DEBUG;TRACE;TESTINGONLY;$(HostingPlatform)</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|AnyCPU'">
        <DebugType>pdbonly</DebugType>
        <Optimize>true</Optimize>
        <OutputPath>bin\$(Configuration)\</OutputPath>
        <DefineConstants>$(DefineConstants);TRACE;TESTINGONLY;$(HostingPlatform)</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
    </PropertyGroup>

    <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'ReleaseForDeploy|AnyCPU'">
        <NoWarn>$(NoWarn),436,NU5125,CS1998,CS0649,CS8618,CS8604</NoWarn>
        <DebugType>pdbonly</DebugType>
        <Optimize>true</Optimize>
        <OutputPath>bin\$(Configuration)\</OutputPath>
        <DefineConstants>$(DefineConstants);TRACE;$(HostingPlatform)</DefineConstants>
        <ErrorReport>prompt</ErrorReport>
        <WarningLevel>4</WarningLevel>
    </PropertyGroup>

</Project>
